#                _                        _   _
#     /\        | |                      | | (_)
#    /  \  _   _| |_ ___  _ __ ___   __ _| |_ _  ___  _ __
#   / /\ \| | | | __/ _ \| '_ ` _ \ / _` | __| |/ _ \| '_ \
#  / ____ \ |_| | || (_) | | | | | | (_| | |_| | (_) | | | |
# /_/    \_\__,_|\__\___/|_| |_| |_|\__,_|\__|_|\___/|_| |_|
# https://www.home-assistant.io/components/automation/
# https://www.home-assistant.io/docs/automation/examples/
# https://www.home-assistant.io/cookbook/

#     __            _ _         _____  _
#    /_/           | (_)       |  __ \| |
#    / \  _   _  __| |_  ___   | |__) | | __ _ _   _  ___ _ __
#   / _ \| | | |/ _` | |/ _ \  |  ___/| |/ _` | | | |/ _ \ '__|
#  / ___ \ |_| | (_| | | (_) | | |    | | (_| | |_| |  __/ |
# /_/   \_\__,_|\__,_|_|\___/  |_|    |_|\__,_|\__, |\___|_|
#                                               __/ |
#                                              |___/
# Controle do volume
- alias: Ajusta Volume do Player de Audio
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: input_number.audio_volume
  action:
  - service: media_player.volume_set
    data_template:
      entity_id: >
        {% if is_state("input_select.src_cast_audio", "Google Home Quarto") %} media_player.google_home
        {% elif is_state("input_select.src_cast_audio", "Google Home Sala") %} media_player.google_home_sala
        {% elif is_state("input_select.src_cast_audio", "Chromecast Tv Sala") %} media_player.tv_da_sala
        {% elif is_state("input_select.src_cast_audio", "Chromecast Tv Quarto") %} media_player.tv_do_quarto
        {% endif %}
      volume_level: '{{  states.input_number.audio_volume.state  }}'

# __      ____    _              _____  _
# \ \    / /_/   | |            |  __ \| |
#  \ \  / / _  __| | ___  ___   | |__) | | __ _ _   _  ___ _ __
#   \ \/ / | |/ _` |/ _ \/ _ \  |  ___/| |/ _` | | | |/ _ \ '__|
#    \  /  | | (_| |  __/ (_) | | |    | | (_| | |_| |  __/ |
#     \/   |_|\__,_|\___|\___/  |_|    |_|\__,_|\__, |\___|_|
#                                                __/ |
#                                               |___/
# Controle do volume
- alias: Ajusta Volume do Player de Video
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: input_number.video_volume
  action:
  - service: media_player.volume_set
    data_template:
      entity_id: >
        {% if is_state("input_select.src_cast_video", "Quarto") %} media_player.tv_do_quarto
        {% elif is_state("input_select.src_cast_video", "Sala") %} media_player.tv_da_sala
        {% endif %}
      volume_level: '{{  states.input_number.video_volume.state  }}'

- alias: Ajusta Volume do Player de Video Streaming
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: input_number.video_teste_volume
  action:
  - service: media_player.volume_set
    data_template:
      entity_id: >
        {% if is_state("input_select.src_cast_video", "Quarto") %} media_player.tv_do_quarto
        {% elif is_state("input_select.src_cast_video", "Sala") %} media_player.tv_da_sala
        {% endif %}
      volume_level: '{{  states.input_number.video_teste_volume.state  }}'

#  _____                              _          _         ______                             _
# |  __ \                            | |        | |       |  ____|                           | |
# | |__) |___ _ __   _____   ____ _  | |     ___| |_ ___  | |__   _ __   ___ _ __ _   _ _ __ | |_
# |  _  // _ \ '_ \ / _ \ \ / / _` | | |    / _ \ __/ __| |  __| | '_ \ / __| '__| | | | '_ \| __|
# | | \ \  __/ | | | (_) \ V / (_| | | |___|  __/ |_\__ \ | |____| | | | (__| |  | |_| | |_) | |_
# |_|  \_\___|_| |_|\___/ \_/ \__,_| |______\___|\__|___/ |______|_| |_|\___|_|   \__, | .__/ \__|
#                                                                                 |___/|_|
- id: letsencrypt-renewal
  initial_state: true
  alias: "Renova Let's Encrypt"
  trigger:
  - platform: time
    at: '00:00:00'
  action:
  - service: hassio.addon_restart
    data:
      addon: core_letsencrypt


#   _____            _             _            __      __
#  / ____|          | |           | |           \ \    /_ |
# | |     ___  _ __ | |_ _ __ ___ | | ___   _____\ \    | |
# | |    / _ \| '_ \| __| '__/ _ \| |/ _ \ |______> >   | |
# | |___| (_) | | | | |_| | | (_) | |  __/       / /    | |
#  \_____\___/|_| |_|\__|_|  \___/|_|\___|      /_/     |_|
#
# BOTAO ARMAR
- alias: Controle (1) - Armar
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.c1_armar
    from: 'off'
    to: 'on'
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.seguranca_casa

# BOTAO DESARMAR
- alias: Controle (1) - Desarmar
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.c1_desarmar
    from: 'off'
    to: 'on'
  action:
  - service: switch.turn_off
    data:
      entity_id: switch.seguranca_casa

# HOME (Liga luz Poste se estiver off)
- alias: Controle (1) - Bt Home (Liga Poste)
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.c1_home
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: light.postes
    state: 'off'
  action:
  - service: light.turn_on
    data:
      entity_id: 
        - light.postes
        - light.area_da_piscina

# HOME (Desliga luz Poste se estiver on)
- alias: Controle (1) - Bt Home (Desligar Poste)
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.c1_home
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: light.postes
    state: 'on'
  action:
  - service: light.turn_off
    data:
      entity_id: 
        - light.postes
        - light.area_da_piscina

# SOS (Liga luz pendentes se estiver off)
- alias: Controle (1) - Bt SOS (Liga QM)
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.c1_sos
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: light.pendentes
    state: 'off'
  action:
  - service: light.turn_on
    data:
      entity_id: light.pendentes

# SOS (Desliga luz pendentes se estiver on)
- alias: Controle (1) - Bt SOS (Desligar QM)
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.c1_sos
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: light.pendentes
    state: 'on'
  action:
  - service: light.turn_off
    data:
      entity_id: light.pendentes


#   _____            _             _            __      ___
#  / ____|          | |           | |           \ \    |__ \
# | |     ___  _ __ | |_ _ __ ___ | | ___   _____\ \      ) |
# | |    / _ \| '_ \| __| '__/ _ \| |/ _ \ |______> >    / /
# | |___| (_) | | | | |_| | | (_) | |  __/       / /    / /_
#  \_____\___/|_| |_|\__|_|  \___/|_|\___|      /_/    |____|
#
# ARMAR
- alias: Controle (2) - Armar
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.c2_armar
    from: 'off'
    to: 'on'
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.seguranca_casa

# DESARMAR
- alias: Controle (2) - Desarmar
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.c2_desarmar
    from: 'off'
    to: 'on'
  action:
  - service: switch.turn_off
    data:
      entity_id: switch.seguranca_casa

# HOME ( SEM FUNCAO)
- alias: Controle (2) - Btn Home
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.c2_home
    from: 'off'
    to: 'on'
  action:
  - service: notify.telegramrudi
    data:
      message: Botão Home pressinado em controle 2.
  - service: tts.google_translate_say
    data_template:
      entity_id: media_player.google_home
      message: Home pressinado em controle 2.

# SOS ( SEM FUNCAO)
- alias: Controle (2) - Btn SOS
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.c2_sos
    from: 'off'
    to: 'on'
  action:
  - service: notify.telegramrudi
    data:
      message: Botão SOS pressinado em controle 2.
  - service: tts.google_translate_say
    data_template:
      entity_id: media_player.google_home
      message: SOS pressinado em controle 2.

#   _____            _             _            __      ____
#  / ____|          | |           | |           \ \    |___ \
# | |     ___  _ __ | |_ _ __ ___ | | ___   _____\ \     __) |
# | |    / _ \| '_ \| __| '__/ _ \| |/ _ \ |______> >   |__ <
# | |___| (_) | | | | |_| | | (_) | |  __/       / /    ___) |
#  \_____\___/|_| |_|\__|_|  \___/|_|\___|      /_/    |____/
# 

# ARMAR
- alias: Controle (3) - Armar
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.c3_armar
    from: 'off'
    to: 'on'
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.seguranca_casa

# DESARMAR
- alias: Controle (3) - Desarmar
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.c3_desarmar
    from: 'off'
    to: 'on'
  action:
  - service: switch.turn_off
    data:
      entity_id: switch.seguranca_casa

# HOME (Liga luz do Abajur se estiver off)
- alias: Controle (3) - Bt Home (Liga abajur)
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.c3_home
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: light.yeelight_color1_7c49eb15924b
    state: 'off'
  action:
  - service: light.turn_on
    data:
      entity_id: light.yeelight_color1_7c49eb15924b
      transition: 3

# HOME (Desliga luz do Abajur se estiver on)
- alias: Controle (3) - Bt Home (Desligar abajur)
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.c3_home
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: light.yeelight_color1_7c49eb15924b
    state: 'on'
  action:
  - service: light.turn_off
    data:
      entity_id: light.yeelight_color1_7c49eb15924b
      transition: 3

# SOS (Liga luz do postes se estiver off)
- alias: Controle (3) - SOS Home (Liga Postes)
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.c3_sos
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: light.postes
    state: 'off'
  action:
  - service: light.turn_on
    data:
      entity_id: 
        - light.postes
        - light.area_da_piscina

# SOS (Desliga luz do postes se estiver on)
- alias: Controle (3) - Bt SOS (Desligar Postes)
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.c3_sos
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: light.postes
    state: 'on'
  action:
  - service: light.turn_off
    data:
      entity_id: 
        - light.postes
        - light.area_da_piscina


#  _____       _                             _                        _  _  ____ ____  __  __ _         
# |_   _|     | |                           | |                      | || ||___ \___ \|  \/  | |
#   | |  _ __ | |_ ___ _ __ _ __ _   _ _ __ | |_ ___  _ __ ___  ___  | || |_ __) |__) | \  / | |__  ____
#   | | | '_ \| __/ _ \ '__| '__| | | | '_ \| __/ _ \| '__/ _ \/ __| |__   _|__ <|__ <| |\/| | '_ \|_  /
#  _| |_| | | | ||  __/ |  | |  | |_| | |_) | || (_) | | |  __/\__ \    | | ___) |__) | |  | | | | |/ / 
# |_____|_| |_|\__\___|_|  |_|   \__,_| .__/ \__\___/|_|  \___||___/    |_||____/____/|_|  |_|_| |_/___|
#                                     |_|                                                               
#Cozinha
- alias: RF1 Cozinha On
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.rf1_interruptor_coz
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: light.pia
    state: 'off'
  action:
  - service: light.turn_on
    data:
      entity_id: 
        - light.pia
- alias: RF1 Cozinha Off
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.rf1_interruptor_coz
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: light.pia
    state: 'on'
  action:
  - service: light.turn_off
    data:
      entity_id: 
        - light.pia
- alias: RF2 Cozinha On
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.rf2_interruptor_coz
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: switch.pressurizador
    state: 'off'
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.pressurizador
- alias: RF2 Cozinha Off
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.rf2_interruptor_coz
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: switch.pressurizador
    state: 'on'
  action:
  - service: switch.turn_off
    data:
      entity_id: switch.pressurizador
#Banheiro da Suite
- alias: RF1 Banheiro Suite On
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.rf1_interruptor_bsu
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: light.banheiro_da_suite
    state: 'off'
  action:
  - service: light.turn_on
    data:
      entity_id: 
        - light.banheiro_da_suite
- alias: RF1 Banheiro Suite Off
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.rf1_interruptor_bsu
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: light.banheiro_da_suite
    state: 'on'
  action:
  - service: light.turn_off
    data:
      entity_id: 
        - light.banheiro_da_suite
- alias: RF2 Banheiro Suite On
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.rf2_interruptor_bsu
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: switch.pressurizador
    state: 'off'
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.pressurizador
- alias: RF2 Banheiro Suite Off
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.rf2_interruptor_bsu
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: switch.pressurizador
    state: 'on'
  action:
  - service: switch.turn_off
    data:
      entity_id: switch.pressurizador
#Banheiro Social
- alias: RF1 Banheiro Social On
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.rf1_interruptor_bso
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: light.banheiro_social
    state: 'off'
  action:
  - service: light.turn_on
    data:
      entity_id: 
        - light.banheiro_social
- alias: RF1 Banheiro Social Off
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.rf1_interruptor_bso
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: light.banheiro_social
    state: 'on'
  action:
  - service: light.turn_off
    data:
      entity_id: 
        - light.banheiro_social
- alias: RF2 Banheiro Social On
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.rf2_interruptor_bso
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: switch.pressurizador
    state: 'off'
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.pressurizador
- alias: RF2 Banheiro Social Off
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: binary_sensor.rf2_interruptor_bso
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: switch.pressurizador
    state: 'on'
  action:
  - service: switch.turn_off
    data:
      entity_id: switch.pressurizador


#  _                 _   _       _   _  __
# | |               | \ | |     | | (_)/ _|
# | |    _   _ ____ |  \| | ___ | |_ _| |_
# | |   | | | |_  / | . ` |/ _ \| __| |  _|
# | |___| |_| |/ /  | |\  | (_) | |_| | |_
# |______\__,_/___| |_| \_|\___/ \__|_|_(_)
#
# Notifica se luz foi ligado/desligada e ninguem estiver em casa
- alias: 'Notificação: Luzez On/Off'
  initial_state: true
  trigger:
  - entity_id:
      - light.garagem
      - light.arandelas
      - light.arandelas_da_varanda
      - light.area_da_piscina
      - light.refretores_piscina
      - light.entrada
      - light.varanda_fundos
      - light.postes
      - light.lavanderia
      - light.banheiro_da_suite
      - light.banheiro_social
      - light.lavabo
      - light.cozinha
      - light.pia
      - light.bebedor
      - light.pendentes
      - light.sala_game
      - light.central
      - light.trilhos
      - light.bancada
      - light.jf
      - light.entrada_garagem
      - light.mesa_de_jantar
      - light.lustre
      - light.sala_de_estar
      - light.quarto_da_frente
      - light.quarto_do_meio
      - light.corredor
      - light.quarto_da_suite
      - light.yeelight_color1_7c49eb15924b
      - light.closet
    from: 'off'
    platform: state
    to: 'on'
  - entity_id:
      - light.garagem
      - light.arandelas
      - light.arandelas_da_varanda
      - light.area_da_piscina
      - light.refretores_piscina
      - light.entrada
      - light.varanda_fundos
      - light.postes
      - light.lavanderia
      - light.banheiro_da_suite
      - light.banheiro_social
      - light.lavabo
      - light.cozinha
      - light.pia
      - light.bebedor
      - light.pendentes
      - light.sala_game
      - light.central
      - light.trilhos
      - light.bancada
      - light.jf
      - light.entrada_garagem
      - light.mesa_de_jantar
      - light.lustre
      - light.sala_de_estar
      - light.quarto_da_frente
      - light.quarto_do_meio
      - light.corredor
      - light.quarto_da_suite
      - light.yeelight_color1_7c49eb15924b
      - light.closet
    from: 'on'
    platform: state
    to: 'off'
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: 'group.all_devices'
        state: 'not_home'
      - condition: state
        entity_id: 'group.all_devices'
        state: 'unknown'
  action:
  - service: notify.telegramtodos
    data_template:
      message: >
        Luz: {{ trigger.to_state.attributes.friendly_name }} {{ trigger.to_state.state }}

#  _____  _                     _ _   _                  _   _       _   _  __
# |  __ \(_)                   (_) | (_)                | \ | |     | | (_)/ _|
# | |  | |_ ___ _ __   ___  ___ _| |_ ___   _____  ___  |  \| | ___ | |_ _| |_
# | |  | | / __| '_ \ / _ \/ __| | __| \ \ / / _ \/ __| | . ` |/ _ \| __| |  _|
# | |__| | \__ \ |_) | (_) \__ \ | |_| |\ V / (_) \__ \ | |\  | (_) | |_| | |_
# |_____/|_|___/ .__/ \___/|___/_|\__|_| \_/ \___/|___/ |_| \_|\___/ \__|_|_(_)
#              |_|
#
# Notifica se quando um dispositivo switch ligar/desligar se ninguem estiver em casa
- alias: 'Notificação: Switch On/Off'
  initial_state: true
  trigger:
  - entity_id:
      - switch.ventilador
      - switch.tv_do_quarto
      - switch.ar_quarto
      - switch.xboom_som
      - switch.tv_lg_55
    from: 'off'
    platform: state
    to: 'on'
  - entity_id:
      - switch.ventilador
      - switch.tv_do_quarto
      - switch.ar_quarto
      - switch.xboom_som
      - switch.tv_lg_55
    from: 'on'
    platform: state
    to: 'off'
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: 'group.all_devices'
        state: 'not_home'
      - condition: state
        entity_id: 'group.all_devices'
        state: 'unknown'
  action:
  - service: notify.telegramtodos
    data_template:
      message: >
        {{ trigger.to_state.attributes.friendly_name }} {{ trigger.to_state.state }}

#  _   _       _   _  __  __      __
# | \ | |     | | (_)/ _| \ \    / /
# |  \| | ___ | |_ _| |_   \ \  / /__ ____
# | . ` |/ _ \| __| |  _|   \ \/ / _ \_  /
# | |\  | (_) | |_| | |_     \  / (_) / /
# |_| \_|\___/ \__|_|_(_)     \/ \___/___|
#
# Fala temperatura externa ao ligar o climatizador
- alias: "Falar Temperatura ao ligar Ar"
  initial_state: true
  trigger:
  - platform: state
    entity_id: climate.climatizador
    from: 'off'
    to: 'auto'
  action:
  - service: tts.google_translate_say
    data_template:
      entity_id: media_player.google_home
      message: 'Temperatura externa é de {{ states.sensor.dark_sky_temperature.state | int }} graus.'

# Da boas vindas ao abrir porta da frente, e envia foto (Apenas uma ideia...)
- alias: "Porta entrada aberta"
  initial_state: false
  trigger:
  - platform: state
    entity_id: binary_sensor.porta_entrada
    from: 'off'
    to: 'on'
  action:
  - service: tts.google_translate_say
    data_template:
      entity_id: media_player.google_home
      message: Seja bem vindo.
  - delay:
      milliseconds: 600
  - service: script.turn_on
    entity_id: script.fotos_interna


#  _____                            _            _               _______   __      _ _     __
# |  __ \                          | |          | |             / /  __ \ /_/     | (_)    \ \
# | |  | | ___  ___ _ __   ___ _ __| |_ __ _  __| | ___  _ __  | || |__) |__ _  __| |_  ___ | |
# | |  | |/ _ \/ __| '_ \ / _ \ '__| __/ _` |/ _` |/ _ \| '__| | ||  _  // _` |/ _` | |/ _ \| |
# | |__| |  __/\__ \ |_) |  __/ |  | || (_| | (_| | (_) | |    | || | \ \ (_| | (_| | | (_) | |
# |_____/ \___||___/ .__/ \___|_|   \__\__,_|\__,_|\___/|_|    | ||_|  \_\__,_|\__,_|_|\___/| |
#                  | |                                          \_\                        /_/
#                  |_|
- alias: "Conf. Despertador 1"
  initial_state: true
  trigger:
    platform: template
    value_template: '{{ states.sensor.time.state == states.sensor.despert1_despertar_automacao.state }}'
  condition:
    condition: state
    entity_id: input_boolean.despert1_status
    state: 'on'
  action:
  - service: media_player.volume_set
    data_template:
      entity_id: >
        {% if is_state("input_select.despert1_src", "do Quarto") %} media_player.google_home
        {% elif is_state("input_select.despert1_src", "da Sala") %} media_player.google_home_sala
        {% endif %}
      volume_level: '{{  states.input_number.despert1_volume.state  }}'
  - service: tts.watson_tts_say
    data_template:
      entity_id: >
        {% if is_state("input_select.despert1_src", "do Quarto") %} media_player.google_home
        {% elif is_state("input_select.despert1_src", "da Sala") %} media_player.google_home_sala
        {% endif %}
      message: '{{ states.input_text.despert1_mensagem.state }} São {{ states.input_number.despert1_hora.state | int }} horas e {{ states.input_number.despert1_minuto.state | int }} minutos'
  - delay:
      seconds: 6
  - service: tts.watson_tts_say
    data_template:
      entity_id: >
        {% if is_state("input_select.despert1_src", "do Quarto") %} media_player.google_home
        {% elif is_state("input_select.despert1_src", "da Sala") %} media_player.google_home_sala
        {% endif %}
      message: 'Faz {{ states.sensor.dark_sky_temperature.state | int }} graus. A previsão do tempo é: {{ states.sensor.dark_sky_hourly_summary.state }} . E para os próximos dias será: {{ states.sensor.dark_sky_daily_summary.state }} '
  - delay:
      seconds: 25
  -  service: media_player.play_media
     data_template:
       entity_id: >
        {% if is_state("input_select.despert1_src", "do Quarto") %} media_player.google_home
        {% elif is_state("input_select.despert1_src", "da Sala") %} media_player.google_home_sala
        {% endif %}
       media_content_id: >
        {% if is_state("input_select.despert1_audio_str", "Classic Rock Florida") %} http://us4.internet-radio.com:8258/stream
        {% elif is_state("input_select.despert1_audio_str", "Mix FM") %} http://mixaac.crossradio.com.br:10000/stream
        {% elif is_state("input_select.despert1_audio_str", "Kiss FM Brasil") %} http://199.233.234.34:8022/live
        {% elif is_state("input_select.despert1_audio_str", "Blues") %} http://i4.streams.ovh:8352/stream
        {% elif is_state("input_select.despert1_audio_str", "Diney") %} http://edge-np.cdn.mdstrm.com/5a9ee30411c043ae48e40bce.mp3
        {% elif is_state("input_select.despert1_audio_str", "Coca-Cola") %} https://ic.imusicaradios.com.br/brasil.stream.http?url=br_-_coca-cola_-_fm&1557842165443
        {% elif is_state("input_select.despert1_audio_str", "Transamerica") %} http://transamerica.crossradio.com.br:9100/stream
        {% elif is_state("input_select.despert1_audio_str", "BBC") %} http://bbcmedia.ic.llnwd.net/stream/bbcmedia_radio1_mf_p
        {% elif is_state("input_select.despert1_audio_str", "DubBase FM") %} http://stream.dubbase.fm:7002
        {% endif %}
       media_content_type: 'music'

#  _____                            _            _               _______ _                 _         __
# |  __ \                          | |          | |             / / ____(_)               | |        \ \
# | |  | | ___  ___ _ __   ___ _ __| |_ __ _  __| | ___  _ __  | | (___  _ _ __ ___  _ __ | | ___  ___| |
# | |  | |/ _ \/ __| '_ \ / _ \ '__| __/ _` |/ _` |/ _ \| '__| | |\___ \| | '_ ` _ \| '_ \| |/ _ \/ __| |
# | |__| |  __/\__ \ |_) |  __/ |  | || (_| | (_| | (_) | |    | |____) | | | | | | | |_) | |  __/\__ \ |
# |_____/ \___||___/ .__/ \___|_|   \__\__,_|\__,_|\___/|_|    | |_____/|_|_| |_| |_| .__/|_|\___||___/ |
#                  | |                                          \_\                 | |              /_/
#                  |_|                                                              |_|
- alias: "Conf. Despertador 2"
  initial_state: true
  trigger:
    platform: template
    value_template: '{{ states.sensor.time.state == states.sensor.despert2_despertar_automacao.state }}'
  condition:
    condition: state
    entity_id: input_boolean.despert2_status
    state: 'on'
  action:
  - service: media_player.volume_set
    data_template:
      entity_id: >
        {% if is_state("input_select.despert2_src", "do Quarto") %} media_player.google_home
        {% elif is_state("input_select.despert2_src", "da Sala") %} media_player.google_home_sala
        {% endif %}
      volume_level: '{{  states.input_number.despert2_volume.state  }}'
  - service: tts.google_translate_say
    data_template:
      entity_id: >
        {% if is_state("input_select.despert2_src", "do Quarto") %} media_player.google_home
        {% elif is_state("input_select.despert2_src", "da Sala") %} media_player.google_home_sala
        {% endif %}
      message: '{{ states.input_text.despert2_mensagem.state }} São {{ states.input_number.despert2_hora.state | int }} horas e {{ states.input_number.despert2_minuto.state | int }} minutos'
  - delay:
      seconds: 7
  - service: tts.google_translate_say
    data_template:
      entity_id: >
        {% if is_state("input_select.despert2_src", "do Quarto") %} media_player.google_home
        {% elif is_state("input_select.despert2_src", "da Sala") %} media_player.google_home_sala
        {% endif %}
      message: ' {{ states.sensor.dark_sky_hourly_summary.state }} , faz {{ states.sensor.dark_sky_temperature.state | int }} graus.'

#  _______        _      _____                                      _  _  ____ ____  __  __ _
# |__   __|      | |    / ____|                                    | || ||___ \___ \|  \/  | |
#    | | ___  ___| |_  | (___   ___ _ __  ___  ___  _ __ ___  ___  | || |_ __) |__) | \  / | |__  ____
#    | |/ _ \/ __| __|  \___ \ / _ \ '_ \/ __|/ _ \| '__/ _ \/ __| |__   _|__ <|__ <| |\/| | '_ \|_  /
#    | |  __/\__ \ |_   ____) |  __/ | | \__ \ (_) | | |  __/\__ \    | | ___) |__) | |  | | | | |/ /
#    |_|\___||___/\__| |_____/ \___|_| |_|___/\___/|_|  \___||___/    |_||____/____/|_|  |_|_| |_/___|
#
# Envia notificação para telegram de Rudi quando sensor é "violado"
- alias: "Alarme - Testar Sensores"
  initial_state: false
  trigger:
  - platform: state
    entity_id:
      - binary_sensor.sala_social
      - binary_sensor.sala_jantar
      - binary_sensor.corredor
      - binary_sensor.closet
      - binary_sensor.ext_garagem
      - binary_sensor.ext_piscina
      - binary_sensor.porta_varanda
      - binary_sensor.porta_entrada
      - binary_sensor.porta_area
      - binary_sensor.janela_closet
      - binary_sensor.janela_cozinha
      - binary_sensor.janela_suite
      - binary_sensor.janela_quarto_f
      - binary_sensor.janela_quarto_m
    to: 'on'
  action:
  - service: notify.telegramrudi
    data_template:
      message: >
        [OK] : {{ trigger.to_state.attributes.friendly_name }}
  - service: notify.pushhtml5
    data_template:
      message: >
        [OK] : {{ trigger.to_state.attributes.friendly_name }}

#                _          _____            _ _                    _________      __
#     /\        | |        |  __ \          | (_)                  |__   __\ \    / /
#    /  \  _   _| |_ ___   | |  | | ___  ___| |_  __ _  __ _ _ __     | |   \ \  / /
#   / /\ \| | | | __/ _ \  | |  | |/ _ \/ __| | |/ _` |/ _` | '__|    | |    \ \/ /
#  / ____ \ |_| | || (_) | | |__| |  __/\__ \ | | (_| | (_| | |       | |     \  /
# /_/    \_\__,_|\__\___/  |_____/ \___||___/_|_|\__, |\__,_|_|       |_|      \/
#                                                 __/ |
#                                                |___/
# TV do quarto desliga se o chromecast nao estiver reproduzindo nada por 5 min
# Isso pq na tv do quarto só tenho um chromecast.
- alias: Tv Quarto Desliga - (Sem Player 5min)
  initial_state: true
  trigger:
    platform: state
    entity_id: media_player.tv_do_quarto
    to: 'off'
    for:
      minutes: 5
  action:
  - service: switch.turn_off
    entity_id: switch.tv_quarto
  - service: notify.telegramtodos
    data:
      message: 'Desliguei a TV do quarto! Parece que ninguém estava assistindo.'


#  __  __            _                      _                    _                              ____  ______ ______
# |  \/  |          (_)                    | |                  | |                            / __ \|  ____|  ____|
# | \  / | _____   ___ _ __ ___   ___ _ __ | |_ ___  ___    __ _| | __ _ _ __ _ __ ___   ___  | |  | | |__  | |__
# | |\/| |/ _ \ \ / / | '_ ` _ \ / _ \ '_ \| __/ _ \/ __|  / _` | |/ _` | '__| '_ ` _ \ / _ \ | |  | |  __| |  __|
# | |  | | (_) \ V /| | | | | | |  __/ | | | || (_) \__ \ | (_| | | (_| | |  | | | | | |  __/ | |__| | |    | |
# |_|  |_|\___/ \_/ |_|_| |_| |_|\___|_| |_|\__\___/|___/  \__,_|_|\__,_|_|  |_| |_| |_|\___|  \____/|_|    |_|
#  ______      _                                                     _               __
# |  ____|    | |                                                   (_)             /_/
# | |__  __  _| |_ ___ _ __ _ __   ___    ___  ___ _ __ ___    _ __  _ _ __   __ _  ___ _ __ ___     ___ _ __ ___     ___ __ _ ___  __ _
# |  __| \ \/ / __/ _ \ '__| '_ \ / _ \  / __|/ _ \ '_ ` _ \  | '_ \| | '_ \ / _` |/ _ \ '_ ` _ \   / _ \ '_ ` _ \   / __/ _` / __|/ _` |
# | |____ >  <| ||  __/ |  | | | | (_) | \__ \  __/ | | | | | | | | | | | | | (_| |  __/ | | | | | |  __/ | | | | | | (_| (_| \__ \ (_| |
# |______/_/\_\\__\___|_|  |_| |_|\___/  |___/\___|_| |_| |_| |_| |_|_|_| |_|\__, |\___|_| |_| |_|  \___|_| |_| |_|  \___\__,_|___/\__,_|
#                                                                             __/ |
#                                                                            |___/
# Movimento area da piscina
- alias: "Piscina (Alarme OFF) - Movimento"
  initial_state: true
  trigger:
  - platform: state
    entity_id: binary_sensor.ext_piscina
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: alarm_control_panel.alarme_da_casa
        state: disarmed
        # não envia novamente se acontecer movimento nos proximos 70seg
      - condition: template
        value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.piscina_alarme_off_movimento.attributes.last_triggered) | int > 70 }}'
      - condition: or
        # Não ter ninguem em casa
        conditions:
          - condition: state
            entity_id: group.all_devices
            state: 'not_home'
          - condition: state
            entity_id: group.all_devices
            state: 'unknown'
  action:
  - service: notify.telegramtodos
    data:
      message: "Movimento na área da piscina"
  - service: script.turn_on
    entity_id: script.fotos_piscina
  - service: script.turn_on
    entity_id: script.fotos_interna
  - service: script.turn_on
    entity_id: script.fotos_garagem

# Movimento na garagem
- alias: "Garagem (Alarme OFF) - Movimento"
  initial_state: true
  trigger:
  - platform: state
    entity_id: binary_sensor.ext_garagem
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: alarm_control_panel.alarme_da_casa
        state: disarmed
        # não envia novamente se acontecer movimento nos proximos 70seg
      - condition: template
        value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.garagem_alarme_off_movimento.attributes.last_triggered) | int > 70 }}'
      - condition: or
        conditions:
          - condition: state
            entity_id: group.all_devices
            state: 'not_home'
          - condition: state
            entity_id: group.all_devices
            state: 'unknown'
  action:
  - service: notify.telegramtodos
    data:
      message: "Movimento na Garagem"
  - service: script.turn_on
    entity_id: script.fotos_garagem
  - service: script.turn_on
    entity_id: script.fotos_piscina

# Notifica se algum sensor for violado mesmo com alarme off, porém sem ninguem em casa.
- alias: 'Notificação: Sensor Alarme Off (S/Ninguém)'
  initial_state: true
  trigger:
  - entity_id:
      - binary_sensor.sala_social
      - binary_sensor.sala_jantar
      - binary_sensor.corredor
      - binary_sensor.closet
      - binary_sensor.porta_varanda
      - binary_sensor.porta_entrada
      - binary_sensor.porta_area
      - binary_sensor.janela_closet
      - binary_sensor.janela_cozinha
      - binary_sensor.janela_suite
      - binary_sensor.janela_quarto_f
      - binary_sensor.janela_quarto_m
    from: 'off'
    platform: state
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: alarm_control_panel.alarme_da_casa
        state: disarmed
      - condition: or
        conditions:
          - condition: state
            entity_id: group.all_devices
            state: 'not_home'
          - condition: state
            entity_id: group.all_devices
            state: 'unknown'
  action:
  - service: notify.telegramtodos
    data_template:
      message: >
        <b>Sensor violado</b>: {{ trigger.to_state.attributes.friendly_name }}

#  __  __            _                      _                   _                              ____  _   _
# |  \/  |          (_)                    | |            /\   | |                            / __ \| \ | |
# | \  / | _____   ___ _ __ ___   ___ _ __ | |_ ___      /  \  | | __ _ _ __ _ __ ___   ___  | |  | |  \| |
# | |\/| |/ _ \ \ / / | '_ ` _ \ / _ \ '_ \| __/ _ \    / /\ \ | |/ _` | '__| '_ ` _ \ / _ \ | |  | | . ` |
# | |  | | (_) \ V /| | | | | | |  __/ | | | || (_) |  / ____ \| | (_| | |  | | | | | |  __/ | |__| | |\  |
# |_|  |_|\___/ \_/ |_|_| |_| |_|\___|_| |_|\__\___/  /_/    \_\_|\__,_|_|  |_| |_| |_|\___|  \____/|_| \_|
#

# Movimento suspeitos area piscina
- alias: "Piscina (Alarme ON) - Movimento"
  initial_state: true
  trigger:
  - platform: state
    entity_id: binary_sensor.ext_piscina
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: alarm_control_panel.alarme_da_casa
    state: armed_away
  action:
  - service: notify.telegramtodos
    data:
      message: "Movimento na área da piscina"
  - delay:
      milliseconds: 700
  - service: script.turn_on
    entity_id: script.fotos_piscina
  - service: script.turn_on
    entity_id: script.fotos_interna
  - service: script.turn_on
    entity_id: script.fotos_garagem

# Liga luz area piscina e postes se movimento com alarme ativado
- alias: "Piscina (Alarme ON) - Luz (Movimento)"
  initial_state: true
  trigger:
  - entity_id: binary_sensor.ext_piscina
    from: 'off'
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: alarm_control_panel.alarme_da_casa
    state: armed_away
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
  - service: light.turn_on
    data:
      entity_id:
        - light.postes
        - light.varanda_fundo
        - light.area_da_piscina
        - light.garagem
        - light.arandelas

# Desliga luz area piscina e postes se nao tiver mais movimento
- alias: "Piscina (Alarme ON) - Luz (S/Movimento)"
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.ext_piscina
    to: 'off'
    for:
      minutes: 2
  condition:
  - condition: state
    entity_id: alarm_control_panel.alarme_da_casa
    state: armed_away
  action:
    service: light.turn_off
    data:
      entity_id:
        - light.postes
        - light.varanda_fundo
        - light.area_da_piscina
        - light.garagem
        - light.arandelas


# Movimento suspeitos garagem
- alias: "Garagem (Alarme ON) - Movimento"
  initial_state: true
  trigger:
  - platform: state
    entity_id: binary_sensor.ext_garagem
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: alarm_control_panel.alarme_da_casa
    state: armed_away
  action:
  - service: notify.telegramtodos
    data:
      message: "Movimento na garagem"
  - service: script.turn_on
    entity_id: script.fotos_garagem
  - service: script.turn_on
    entity_id: script.fotos_piscina


# Liga luz garagem e postes se movimento com alarme ativado
- alias: "Garagem (Alarme ON) - Luz (Movimento)"
  initial_state: true
  trigger:
  - entity_id: binary_sensor.ext_garagem
    from: 'off'
    platform: state
    to: 'on'

  condition:
  - condition: state
    entity_id: alarm_control_panel.alarme_da_casa
    state: armed_away
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
  - service: light.turn_on
    data:
      entity_id:
        - light.postes
        - light.garagem
        - light.varanda_fundo
        - light.area_da_piscina
        - light.arandelas

# Desliga luz garagem e postes se nao tiver mais movimento
- alias: "Garagem (Alarme ON) - Luz (S/Movimento)"
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.ext_garagem
    to: 'off'
    for:
      minutes: 2
  condition:
  - condition: state
    entity_id: alarm_control_panel.alarme_da_casa
    state: armed_away
  action:
    service: light.turn_off
    data:
      entity_id:
        - light.postes
        - light.garagem
        - light.varanda_fundo
        - light.area_da_piscina
        - light.arandelas

#           _
#     /\   | |
#    /  \  | | __ _ _ __ _ __ ___   ___
#   / /\ \ | |/ _` | '__| '_ ` _ \ / _ \
#  / ____ \| | (_| | |  | | | | | |  __/
# /_/    \_\_|\__,_|_|  |_| |_| |_|\___|


- alias: "Alarme - Aviso que será ativado"
  initial_state: true
  trigger:
  - platform: state
    entity_id: alarm_control_panel.alarme_da_casa
    to: pending
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.sirenes
  - service: switch.turn_off
    data:
      entity_id: switch.sirenes
  - service: notify.telegramtodos
    data:
      message: Alarme será ativo em 30s.
#  - service: media_player.volume_set
#    data_template:
#      entity_id: media_player.google_home
#      volume_level: 0.3
#  - service: tts.google_translate_say
#    data_template:
#      entity_id: media_player.google_home
#      message: Ativando alarme em 30 segundos.
  - service: media_player.volume_set
    data_template:
      entity_id: media_player.google_home_sala
      volume_level: 0.8
  - service: tts.watson_tts_say
    data_template:
      entity_id: media_player.google_home_sala
      message: Ativando alarme em 30 segundos.


- alias: "Alarme - Notif. que foi ativado"
  initial_state: true
  trigger:
  - platform: state
    entity_id: alarm_control_panel.alarme_da_casa
    to: armed_away
#  - platform: state
#    entity_id: alarm_control_panel.alarme_da_casa
#    to: armed_home
  action:
  - service: script.turn_on
    entity_id: script.reseta_sensores
  - service: switch.turn_on
    data:
      entity_id: switch.sirenes
  - service: switch.turn_off
    data:
      entity_id: switch.sirenes
  - service: notify.telegramtodos
    data:
      message: Alarme ativado!
#      message: Alarme ativado {% if is_state('alarm_control_panel.alarme_da_casa',
#        'armed_away') %}com delay de 30s.{% else %}instantaneamente.{% endif %}
#  - service: media_player.volume_set
#    data_template:
#      entity_id: media_player.google_home
#      volume_level: 0.3
#  - service: tts.google_translate_say
#    data_template:
#      entity_id: media_player.google_home
#      message: Alarme ativado
  - service: media_player.volume_set
    data_template:
      entity_id: media_player.google_home_sala
      volume_level: 0.8
  - service: tts.watson_tts_say
    data_template:
      entity_id: media_player.google_home_sala
      message: Alarme ativado

# Quando ativo apaga todas as luzes
- alias: "Alarme - Apaga todas as luzes quando ativo"
  initial_state: true
  trigger:
  - platform: state
    entity_id: alarm_control_panel.alarme_da_casa
    to: armed_away
  action:
  - service: light.turn_off
    data:
      entity_id: group.all_lights

# Desliga sirene ao ser desativado
- alias: "Alarme - Desliga sirene ao ser desativado"
  initial_state: true
  hide_entity: true
  trigger:
  - platform: state
    entity_id: alarm_control_panel.alarme_da_casa
    to: disarmed
  action:
  - service: switch.turn_off
    data:
      entity_id: switch.sirenes

# Notifica quando disparar
- alias: "Alarme - Aviso desativado"
  initial_state: true
  trigger:
  - platform: state
    entity_id: alarm_control_panel.alarme_da_casa
    to: disarmed
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.sirenes
  - service: switch.turn_off
    data:
      entity_id: switch.Sirenes
  - service: notify.telegramtodos
    data:
      message: Alarme desativado!
#  - service: media_player.volume_set
#    data_template:
#      entity_id: media_player.google_home
#      volume_level: 0.3
#  - service: tts.google_translate_say
#    data_template:
#      entity_id: media_player.google_home
#      message: Alarme desativado!
  - service: media_player.volume_set
    data_template:
      entity_id: media_player.google_home_sala
      volume_level: 0.8
  - service: tts.watson_tts_say
    data_template:
      entity_id: media_player.google_home_sala
      message: Alarme desativado!

# Dispara ao ter sensor violado, notifica envia imagens/videos!!!
- alias: "Alarme - Disparar ao ter sensor violado"
  initial_state: true
  trigger:
  - platform: state
    entity_id:
      - binary_sensor.sala_social
      - binary_sensor.sala_jantar
      - binary_sensor.corredor
      - binary_sensor.closet
      - binary_sensor.porta_varanda
      - binary_sensor.porta_entrada
      - binary_sensor.porta_area
      - binary_sensor.janela_closet
      - binary_sensor.janela_cozinha
      - binary_sensor.janela_suite
      - binary_sensor.janela_quarto_f
      - binary_sensor.janela_quarto_m
#      - binary_sensor.ext_garagem
#      - binary_sensor.ext_piscina
    to: 'on'
  condition:
  - condition: state
    entity_id: alarm_control_panel.alarme_da_casa
    state: armed_away
  action:
  # Liga sirenes
  - service: switch.turn_on
    data:
      entity_id: switch.sirenes
  # Liga todas as luzes
  - service: light.turn_on
    data:
      entity_id:
        - group.all_lights
  - service: notify.telegramtodos
    data:
      message: '!!! O ALARME DISPAROU !!!'
  # Envia mensagem com ql sensor foi violado
  - service: notify.telegramtodos
    data_template:
      message: >
        Sensor: {{ trigger.to_state.attributes.friendly_name }}
  # Mensagem de audio nos google homes
  - service: media_player.volume_set
    data_template:
      entity_id: media_player.google_home
      volume_level: 0.6
  - service: tts.google_translate_say
    data_template:
      entity_id: media_player.google_home
      message: Sensor {{ trigger.to_state.attributes.friendly_name }} violado. Pega a 12 que o filho da puta vai levar chumbo!
  - service: media_player.volume_set
    data_template:
      entity_id: media_player.google_home_sala
      volume_level: 0.9
  - service: tts.google_translate_say
    data_template:
      entity_id: media_player.google_home_sala
      message: Sensor {{ trigger.to_state.attributes.friendly_name }} violado. Pega a 12 que o filho da puta vai levar chumbo!
  # Envia foto/video comara interna
  - service: script.turn_on
    entity_id: script.fotos_piscina
  - service: script.turn_on
    entity_id: script.fotos_interna
  - service: script.turn_on
    entity_id: script.fotos_garagem


#                _          _____            _ _                    _
#     /\        | |        |  __ \          | (_)                  | |
#    /  \  _   _| |_ ___   | |  | | ___  ___| |_  __ _  __ _ _ __  | |    _   _ _______  ___
#   / /\ \| | | | __/ _ \  | |  | |/ _ \/ __| | |/ _` |/ _` | '__| | |   | | | |_  / _ \/ __|
#  / ____ \ |_| | || (_) | | |__| |  __/\__ \ | | (_| | (_| | |    | |___| |_| |/ /  __/\__ \
# /_/    \_\__,_|\__\___/  |_____/ \___||___/_|_|\__, |\__,_|_|    |______\__,_/___\___||___/
#                                                 __/ |
#                                                |___/
# Desliga luzes dos banheiros se ficar muito tempo ligada e notifica no google home

# Banheiro da suite
- alias: Luz Sem desligar - Banheiro Suite
  initial_state: true
  trigger:
    platform: state
    entity_id: light.banheiro_da_suite
    from: 'off'
    to: 'on'
    for:
      minutes: 30
  action:
#  - delay: '00:{{ states.input_number.tempo_banheiro_suite.state | int }}:00' # Não funciona corretamente (estudando)
  - service: light.turn_off
    entity_id: light.banheiro_da_suite
  - service: tts.google_translate_say
    data_template:
      entity_id: media_player.google_home
      message: "Oops! Desliguei a luz do banheiro da suíte, estava à {{ states.input_number.tempo_banheiro_suite.state | int }} minutos ligada!"
  - service: tts.google_translate_say
    data_template:
      entity_id: media_player.google_home_sala
      message: "Oops! Desliguei a luz do banheiro da suíte, estava à {{ states.input_number.tempo_banheiro_suite.state | int }} minutos ligada!"

# Banheiro social
- alias: Luz Sem desligar - Banheiro Social
  initial_state: true
  trigger:
    platform: state
    entity_id: light.banheiro_social
    from: 'off'
    to: 'on'
    for:
      minutes: 30
  action:
#  - delay: '00:{{ states.input_number.tempo_banheiro_social.state | int }}:00' # Não funciona corretamente (estudando)
  - service: light.turn_off
    entity_id: light.banheiro_social
  - service: tts.google_translate_say
    data_template:
      entity_id: media_player.google_home
      message: "Oops! Desliguei a luz do banheiro Social, estava à {{ states.input_number.tempo_banheiro_social.state | int }} minutos ligada!"
  - service: tts.google_translate_say
    data_template:
      entity_id: media_player.google_home_sala
      message: "Oops! Desliguei a luz do banheiro Social, estava à {{ states.input_number.tempo_banheiro_social.state | int }} minutos ligada!"

# Banheiro lavabo
- alias: Luz Sem desligar - Lavabo
  initial_state: true
  trigger:
    platform: state
    entity_id: light.lavabo
    from: 'off'
    to: 'on'
    for:
      minutes: 10
  action:
#  - delay: '00:{{ states.input_number.tempo_banheiro_lavabo.state | int }}:00' # Não funciona corretamente (estudando)
  - service: light.turn_off
    entity_id: light.lavabo
  - service: tts.google_translate_say
    data_template:
      entity_id: media_player.google_home
      message: "Oops! Desliguei a luz do lavabo, estava à {{ states.input_number.tempo_banheiro_lavabo.state | int }} minutos ligada!"
  - service: tts.google_translate_say
    data_template:
      entity_id: media_player.google_home_sala
      message: "Oops! Desliguei a luz do lavabo, estava à {{ states.input_number.tempo_banheiro_lavabo.state | int }} minutos ligada!"

#  _                  _____                        _
# | |                / ____|                      | |
# | |    _   _ ____ | |     ___  _ __ _ __ ___  __| | ___  _ __
# | |   | | | |_  / | |    / _ \| '__| '__/ _ \/ _` |/ _ \| '__|
# | |___| |_| |/ /  | |___| (_) | |  | | |  __/ (_| | (_) | |
# |______\__,_/___|  \_____\___/|_|  |_|  \___|\__,_|\___/|_|

# Liga se tiver movimento
- alias: Luz Corredor Liga - 17:00h as 07:30 (Movimento)
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.corredor
    from: 'off'
    to: 'on'
  condition:
    condition: time
    after: '17:00:00'
    before: '08:00:00'
  action:
    service: light.turn_on
    entity_id: light.corredor

# Desliga se nao tiver movimento por 2min
- alias: Luz Corredor Desliga - (S/Movimento 2min)
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.corredor
    to: 'off'
    for:
      minutes: 2
  condition:
    condition: time
    after: '17:00:00'
    before: '08:30:00'
  action:
    service: light.turn_off
    entity_id: light.corredor

#  _                  _____ _                _
# | |                / ____| |              | |
# | |    _   _ ____ | |    | | ___  ___  ___| |_
# | |   | | | |_  / | |    | |/ _ \/ __|/ _ \ __|
# | |___| |_| |/ /  | |____| | (_) \__ \  __/ |_
# |______\__,_/___|  \_____|_|\___/|___/\___|\__|
#
# Liga se tiver movimento
- alias: Luz Closet Liga - 17:00h as 08:00 (Movimento)
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.closet
    from: 'off'
    to: 'on'
  condition:
    condition: time
    after: '17:00:00'
    before: '08:00:00'
  action:
    service: light.turn_on
    entity_id: light.closet

# Desliga se nao tiver movimento por 2min
- alias: Luz Closet Desliga - (S/Movimento 3min)
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.closet
    to: 'off'
    for:
      minutes: 3
#  condition:
#    condition: time
#    after: '00:00:00'
#    before: '08:00:00'
  action:
    service: light.turn_off
    entity_id: light.closet


#  _                 _____          _                                                  _      _
# | |               |  __ \        | |                       /\                       | |    | |
# | |    _   _ ____ | |__) |__  ___| |_ ___  ___    ___     /  \   _ __ __ _ _ __   __| | ___| | __ _ ___
# | |   | | | |_  / |  ___/ _ \/ __| __/ _ \/ __|  / _ \   / /\ \ | '__/ _` | '_ \ / _` |/ _ \ |/ _` / __|
# | |___| |_| |/ /  | |  | (_) \__ \ ||  __/\__ \ |  __/  / ____ \| | | (_| | | | | (_| |  __/ | (_| \__ \
# |______\__,_/___| |_|   \___/|___/\__\___||___/  \___| /_/    \_\_|  \__,_|_| |_|\__,_|\___|_|\__,_|___/
#
# Liga postes
- alias: "Luz Postes - Ligar"
  initial_state: true
  trigger:
    platform: template
    value_template: '{{ states.sensor.time.state == states.sensor.anoiteceu.state }}'
  condition:
  action:
  - service: light.turn_on
    data:
      entity_id:
        - light.postes
# Desliga postes
- alias: "Luz Postes - Desligar"
  initial_state: true
  trigger:
    platform: template
    value_template: "{{ states('sensor.time') == (states.input_datetime.poste_off.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
  action:
  - service: light.turn_off
    data:
      entity_id:
        - light.postes

# Liga arandelas
- alias: "Luz Arandelas - Ligar"
  initial_state: false
  trigger:
    platform: template
    value_template: '{{ states.sensor.time.state == states.sensor.anoiteceu.state }}'
  condition:
  action:
  - service: light.turn_on
    data:
      entity_id:
        - light.arandelas
        - light.arandelas_da_varanda

# Desliga arandelas
- alias: "Luz Arandelas - Desligar"
  initial_state: true
  trigger:
    platform: template
    value_template: "{{ states('sensor.time') == (states.input_datetime.arandelas_off.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
  action:
  - service: light.turn_off
    data:
      entity_id:
        - light.arandelas
        - light.arandelas_da_varanda

# Desliga Pressurizador
#- alias: Auto desligamento do Pressurizador
#  initial_state: true
#  trigger:
#    platform: state
#    entity_id: switch.turn_off
#    to: 'on'
#    for:
#      hours: 2
#  action:
#  - service: switch.turn_off
#    entity_id: switch.pressurizador


#  _____                             _____ _ _       _
# |  __ \                           / ____(_) |     (_)
# | |__) |___  __ _ _ __ __ _ ___  | (___  _| |_   ___  ___
# |  _  // _ \/ _` | '__/ _` / __|  \___ \| | \ \ / / |/ _ \
# | | \ \  __/ (_| | | | (_| \__ \  ____) | | |\ V /| | (_) |
# |_|  \_\___|\__, |_|  \__,_|___/ |_____/|_|_| \_/ |_|\___/
#              __/ |
#             |___/
# Se Silvio estiver dormindo na casa

# Liga luzes e desativa alarme Hora de ir trabalhar
#- alias: "Silvio - Acordar"
#  initial_state: false
#  trigger:
#    platform: template
#    value_template: "{{ states('sensor.time') == (states.input_datetime.silvio_on.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
#  action:
#  - service: light.turn_on
#    data:
#      entity_id:
#        - light.quarto_da_frente
#        - light.pendentes
#        - light.postes
#  - service: switch.turn_off
#    data:
#      entity_id: switch.seguranca_casa

# Desliga luzes e ativa alarme
#- alias: "Silvio - Saiu"
#  initial_state: false
#  trigger:
#    platform: template
#    value_template: "{{ states('sensor.time') == (states.input_datetime.silvio_off.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
#  action:
#  - service: light.turn_off
#    data:
#      entity_id: group.all_lights
#  - service: switch.turn_on
#    data:
#      entity_id: switch.seguranca_casa

# Verifica se o silvio esta conectado na rede para desativar algumas notificacoes
#- alias: "Silvio - Conectado"
#  initial_state: true
#  trigger:
#    platform: state
#    entity_id: binary_sensor.silvio
#    to: 'on'
#  action:
#  - service: automation.turn_off
#    data:
#      entity_id: automation.notificacao_sensor_alarme_off_s_ninguem
#  - service: automation.turn_on
#    data:
#      entity_id:
#        - automation.silvio_acordar
#        - automation.silvio_saiu

# Desativa automação q desativa o alarme as 3:30 e ativa as 4h
#- alias: "Silvio - Desativar Automação Alarme"
#  initial_state: true
#  trigger:
#    platform: state
#    entity_id: binary_sensor.silvio
#    to: 'off'
#    for:
#      hours: 9
#  action:
#  - service: automation.turn_off
#    data:
#      entity_id:
#        - automation.silvio_acordar
#        - automation.silvio_saiu


#  _______   _                                   _____                                _
# |__   __| | |                                 / ____|                              | |
#    | | ___| | ___  __ _ _ __ __ _ _ __ ___   | |     ___  _ __ ___   __ _ _ __   __| | ___  ___
#    | |/ _ \ |/ _ \/ _` | '__/ _` | '_ ` _ \  | |    / _ \| '_ ` _ \ / _` | '_ \ / _` |/ _ \/ __|
#    | |  __/ |  __/ (_| | | | (_| | | | | | | | |___| (_) | | | | | | (_| | | | | (_| | (_) \__ \
#    |_|\___|_|\___|\__, |_|  \__,_|_| |_| |_|  \_____\___/|_| |_| |_|\__,_|_| |_|\__,_|\___/|___/
#                    __/ |
#                   |___/
- alias: 'Telegram bot start'
  initial_state: true
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/start'
  action:
    - service: notify.telegramtodos
      data:
        message: 'Start bot!'
#    - service: notify.telegramrudi
#      data:
#        message: 'commands'
#        data:
#          keyboard:
#            - '/ping, /fotos'
#            - '/videogaragem, /videopiscina, /videointerno'

- alias: 'Telegram bot responde ping'
  initial_state: true
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/ping'
  action:
    - service: notify.telegramrudi
      data:
        message: '<b>pong</b>'

- alias: 'Telegram bot Fotos cameras'
  initial_state: true
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/fotos'
  action:
    - service: notify.telegramtodos
      data:
        message: 'Já mando!'
    - service: script.turn_on
      entity_id:
        - script.fotos_garagem
        - script.fotos_piscina
        - script.fotos_interna

- alias: 'Telegram bot video garagem'
  initial_state: true
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/videogaragem'
  action:
    - service: notify.telegramtodos
      data:
        message: 'Já mando!'
    - service: script.turn_on
      entity_id: script.video_garagem

- alias: 'Telegram bot video piscina'
  initial_state: true
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/videopiscina'
  action:
    - service: notify.telegramtodos
      data:
        message: 'Tá Bugado, mas vou tentar'
    - service: script.turn_on
      entity_id: script.video_piscina

- alias: 'Telegram bot video interna'
  initial_state: true
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/videointerno'
  action:
    - service: notify.telegramtodos
      data:
        message: 'Tá Bugado, mas vou tentar'
    - service: script.turn_on
      entity_id: script.video_interna

- alias: 'Telegram bot foto garagem'
  initial_state: true
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/fotogaragem'
  action:
    - service: notify.telegramtodos
      data:
        message: 'Já mando!'
    - service: script.turn_on
      entity_id: script.fotos_garagem

- alias: 'Telegram bot foto piscina'
  initial_state: true
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/fotopiscina'
  action:
    - service: notify.telegramtodos
      data:
        message: 'Já mando!'
    - service: script.turn_on
      entity_id: script.fotos_piscina

- alias: 'Telegram bot foto interna'
  initial_state: true
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/fotointerna'
  action:
    - service: notify.telegramtodos
      data:
        message: 'Já mando!'
    - service: script.turn_on
      entity_id: script.fotos_interna

#  _           _
# | |         | |
# | |     __ _| |__
# | |    / _` | '_ \
# | |___| (_| | |_) |
# |______\__,_|_.__/

#- alias: "99-Liga Garagem 20:30h"
#  initial_state: false
#  #hide_entity: false
#  trigger:
#    - platform: time
#      at: '20:30:00'
#  condition:
#    condition: time
#    weekday:
#      - mon
#      - tue
#      - wed
#      - thu
#      - fri
#  action:
#  - service: light.turn_on
#    data:
#      entity_id: light.garagem

#- alias: "99-Desliga Garagem 5:30h"
#  initial_state: false
#  #hide_entity: false
#  trigger:
#    - platform: time
#      at: '05:30:00'
#  condition:
#    condition: time
#    weekday:
#      - mon
#      - tue
#      - wed
#      - thu
#      - fri
#  action:
#  - service: light.turn_off
#    data:
#      entity_id: light.garagem

# ex.: Não executar se foi executado nos ultimos 2min
#- alias: 'NOME DA AUTOMACAO'
#  initial_state: true
#  trigger:
#   [...]
#  condition:
#    condition: template
#    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.nome_da_automacao.attributes.last_triggered) | int > 120 }}'
#  action:
#  - service: 
#    [...]
